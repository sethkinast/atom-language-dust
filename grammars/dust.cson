fileTypes: [
  'dust'
]
name: 'HTML (Dust)'
scopeName: 'text.html.dust'

patterns: [
  {
    include: '#comment'
  }
  {
    include: '#reference'
  }
  {
    include: '#section_start'
  }
  {
    include: '#section_end'
  }
  {
    include: '#block'
  }
  {
    include: '#partial'
  }
  {
    include: '#special'
  }
  {
    include: 'text.html.basic'
  }
]

repository:
  reference:
    match: '\\{([\\.A-Za-z_$][\\.A-Za-z0-9_$-]*)((?:\\|[A-Za-z]+)*)\\}'
    name: 'variable.other.reference.dust'
    captures:
      1:
        patterns: [
          include: '#identifier'
        ]
      2:
        patterns: [
          include: '#filter'
        ]
  section_start:
    name: 'keyword.control.section.start.dust'
    begin: '\\{([#?^<+@%]\\s*[\\.A-Za-z_$][\\.A-Za-z0-9_$]*)(:[A-Za-z0-9_$]+)?'
    beginCaptures:
      1:
        patterns: [
          include: '#identifier'
        ]
      2:
        patterns: [
          include: '#context'
        ]
    end: '\\/?\\}'
    patterns: [
      include: '#param'
    ]
  section_end:
    match: '\\{\\s*\\/\\s*([\\.A-Za-z_$][\\.A-Za-z0-9_$]*)\\}'
    name: 'keyword.control.section.end.dust'
    captures:
      1:
        name: 'keyword.control.section.identifier.dust'
  block:
    match: '\\{:([A-Za-z_$][A-Za-z0-9_$]*)\\}'
    name: 'storage.block.dust'
  partial:
    name: 'keyword.control.partial.dust'
    match: '\\{>\\s*((?:"[^"\\\\]*(?:\\\\.[^"\\\\]*)*")|(?:[A-Za-z_$][A-Za-z0-9_$-]*))(:[A-Za-z0-9_$]+)?(.*)\\/\\}'
    captures:
      1:
        patterns: [
          include: '#inline'
        ]
      2:
        patterns: [
          include: '#context'
        ]
      3:
        patterns: [
          include: '#param'
        ]
  comment:
    begin: '\\{!'
    end: '!\\}'
    name: 'comment.block.dust'
  identifier:
    patterns: [
      {
        include: '#helper'
      }
      {
        include: '#control'
      }
      {
        include: '#key'
      }
      {
        include: '#path'
      }
    ]
  helper:
    match: '@\\s*[\\.A-Za-z_$][\\.A-Za-z0-9_$]*'
    name: 'keyword.other.special-method.linkedin.pre.dust'
  control:
    match: '[#?^<+%]\\s*[\\.A-Za-z_$][\\.A-Za-z0-9_$]*'
    name: 'keyword.control.section.identifier.dust'
  key:
    match: '[A-Za-z_$][A-Za-z0-9_$]*'
    name: 'variable.other.identifier.dust'
  number:
    'match': '-?(?=[1-9]|0(?!\\d))\\d+(\\.\\d+)?'
    'name': 'constant.numeric.dust'
  path:
    match: '[\\.A-Za-z_$][\\.A-Za-z0-9_$]*'
    name: 'variable.other.identifier.dust'
  special:
    match: '\\{\\~[A-Za-z]+\\}'
    name: 'support.constant.special'
  filter:
    match: '\\|[A-Za-z]+'
    name: 'support.constant.filter'
  context:
    match: ':[A-Za-z0-9_$]+'
    name: 'variable.parameter.context'
  inline:
    match: '(")([^"\\\\]*(?:\\\\.[^"\\\\]*)*)(")' # http://stackoverflow.com/a/5696141/938516
    captures:
      1:
        name: 'punctuation.definition.string.begin'
      2:
        patterns: [
          {
            include: '#reference'
          }
          {
            include: '#special'
          }
        ]
      3:
        name: 'punctuation.definition.string.end'
    name: 'string.quoted.double.inline'
  param:
    match: '([A-Za-z_$][A-Za-z0-9_$]*)(=)((?:"[^"\\\\]*(?:\\\\.[^"\\\\]*)*")|[\\-\\.A-Za-z0-9_$^"]+)'
    captures:
      1:
        name: 'entity.other.attribute-name.dust'
      2:
        name: 'keyword.operator'
      3:
        patterns: [
          {
            include: '#number'
          }
          {
            include: '#key'
          }
          {
            include: '#inline'
          }
        ]
